{"version":3,"sources":["webpack:///src/app/world/dashboard/dashboard.component.ts","webpack:///src/app/world/dashboard/dashboard.component.html","webpack:///src/app/world/world-routing.module.ts","webpack:///src/app/world/world.module.ts","webpack:///src/app/world/world.service.ts"],"names":["DashboardComponent","worldService","allDates","allLinksText","allLinks","cols","allTitles","allTitlesLinks","getAwarenessData","then","data","error","statusMessage","console","getOtherLinks","helplineLink","faqLink","getLatestUpdated","selector","templateUrl","styleUrls","routes","path","component","WorldRoutingModule","forChild","imports","exports","WorldModule","declarations","WorldService","http","get","toPromise","err","log","providedIn"],"mappings":"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","file":"world-world-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { WorldService } from '../world.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  districtWiseCases: any;\n  helplineLink: any;\n  faqLink: any;\n  socialAdvisoryLink: any;\n  statusMessage: string;\n  allDates: any=[];\n  allLinksText: any=[];\n  allLinks: any=[];\n  cols: any=[];\n  allLatestUpdates: any;\n  allTitles: any=[];\n  allTitlesLinks: any=[];\n\n  constructor(private worldService:WorldService) { }\n\n  ngOnInit(): void {\n    this.worldService.getAwarenessData()\n    .then((data)=>{\n       this.allTitles=data.allTitles;\n       this.allTitlesLinks=data.allTitlesLinks;\n    \n    }, (error) => {\n          this.statusMessage =\n                'Problem with the service. Please try again after sometime';\n          console.error(error);\n       });\n  \n  // getAwarenessData\n   \n    this.worldService.getOtherLinks()\n    .then((data)=>{\n      //  this.districtWiseCases=data.districtWiseCases;\n       this.helplineLink=data.helplineLink;\n       this.faqLink=data.faqLink;\n      //  this.socialAdvisoryLink=data.socialAdvisoryLink;\n    }, (error) => {\n          this.statusMessage =\n                'Problem with the service. Please try again after sometime';\n          console.error(error);\n       });\n       \n       this.worldService.getLatestUpdated()\n       .then((data)=>{\n       \n          this.allDates=data.allDates;\n          this.allLinksText=data.allLinksText;\n          this.allLinks=data.allLinks;\n   \n       }, (error) => {\n             this.statusMessage =\n                   'Problem with the service. Please try again after sometime';\n             console.error(error);\n          });\n     }\n  }\n \n  \n\n\n","\n <div>\n    \n    <p-accordion>\n        <p-accordionTab header=\"Latest Updates\">\n            <p-card class=\"header\">\n                <div class=\"p-grid\">\n                <div class=\"p-col-3 p-md-4 p-lg-4\">\n                    <div style=\"font-weight: bolder;\">Date</div>\n                </div>\n                <div class=\"p-col-9 p-md-8 p-lg-8\">\n                    <div  style=\"font-weight: bolder;\">\n                       Latest Updates\n                    </div>\n                </div>\n            </div>\n            </p-card>\n             <p-card class=\"data-part\" *ngFor=\"let a of allDates let i=index\">\n                <div class=\"p-grid\">\n                    <div class=\"p-col-3 p-md-4 p-lg-4\">\n                       \n                        <div  >{{a}}</div>\n                    </div>\n                    <div class=\"p-col-9 p-md-8 p-lg-8\">\n                       <a href={{allLinks[i]}} target=\"_blank\"> <div>\n                            {{allLinksText[i]}}\n                        </div></a>\n                    </div>\n                   \n                </div>\n             </p-card>\n             \n             <!-- <div *ngFor=\"let a of allDates let i=index\">\n                 {{a}}\n                 {{allLinks[i]}}\n             </div> -->\n        </p-accordionTab>\n        <p-accordionTab header=\"Awareness Material\">\n            <p-card class=\"header\">\n                <div class=\"p-grid\">\n             \n                <div class=\"p-col-12 p-md-12 p-lg-12\">\n                    <div  style=\"font-weight: bolder;\">\n                        Titles\n                    </div>\n                </div>\n            </div>\n            </p-card>\n             <p-card class=\"data-part\" *ngFor=\"let a of allTitles let i=index\">\n                <div class=\"p-grid\">\n                   \n                    <div class=\"p-col-12 p-md-12 p-lg-12\">\n                       <a href={{allTitlesLinks[i]}} target=\"_blank\"> <div>\n                            {{a}}\n                        </div></a>\n                    </div>\n                   \n                </div>\n             </p-card>\n             \n             \n        </p-accordionTab>\n        \n    </p-accordion>\n </div>\n <div class=\"links_tab\" style=\"text-align: center;\" >\n    <p-card>\n   <div class=\"p-grid\" style=\"background-color:#ffed75;\">\n       <div class=\"p-col-3 p-md-3 p-lg-3\" style=\"color:#b51714; font-weight: bolder;\">\n           <span>Helpline Number</span>\n           <span>+91-11-23978046</span>\n       </div>\n       <div class=\"p-col-2 p-md-3 p-lg-3\" style=\"color:#b51714; font-weight: bolder;\">\n        <span>Toll Free :</span>\n        <span>1075</span>\n    </div>\n    <div class=\"p-col-4 p-md-3 p-lg-3\" style=\"color:#b51714; font-weight: bolder;\">\n        <span>Helpline Email Id</span>\n        <span>ncov2019@gov.in</span>\n    </div>\n    <div class=\"p-col-3 p-md-3 p-lg-3\" style=\"color:#b51714; font-weight: bolder;\">\n        <span>Arogya Setu<span><img src=\"../../../assets/arogya.png\" width=\"14px\"></span> App</span>\n        <span>\n            <a href=\"http://bit.ly/AarogyaSetu_PS\" target=\"_BLANK\" title=\"For Android\">\n            <img src=\"../../../assets/android.png\" alt=\"android\" \n            width=\"14px\" style=\"margin-right: 2px;\">\n         </a>\n        </span>\n        <span>\n            <a href=\"https://apple.co/2X1KMzO\" target=\"_BLANK\" title=\"For iPhone\">\n            <img src=\"../../../assets/apple.png\" alt=\"apple\" width=\"14px\" >\n            </a>\n        </span>\n    </div>\n   </div>\n    <div style=\"padding: 10px;\">\n     \n      <a href={{helplineLink}} target=\"_blank\" > <span>HelpLine Contact Numbers StateWise</span></a>\n    </div>\n   <!-- <div style=\"padding: 10px;\">\n   \n     <a href={{districtWiseCases}} target=\"_blank\"><span>District Wise Cases</span></a>\n   </div> -->\n   <!-- <div style=\"padding: 10px;\">\n  \n     <a href={{socialAdvisoryLink}} target=\"_blank\"> <span>Advisory on Social Distancing</span></a>\n   </div> -->\n  <div style=\"padding: 10px;\">\n   \n     <a href={{faqLink}} target=\"_blank\"><span>FAQ on COVID-19</span></a>\n   </div>\n</p-card>\n\n </div>\n \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n\nconst routes: Routes = [\n  {path:'', component : DashboardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WorldRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WorldRoutingModule } from './world-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MaterialModule } from 'app/material/material.module';\n\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    WorldRoutingModule\n  ]\n})\nexport class WorldModule { }\n","import { Injectable } from '@angular/core';\nimport{HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map,tap, catchError } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorldService {\n\n  constructor(private http:HttpClient) { }\n\n  getOtherLinks():Promise<any>{\n    return this.http.get(\"/links\")\n    .toPromise()\n    .catch(err=>console.log(err))\n  }\n  getLatestUpdated():Promise<any>{\n    return this.http.get(\"/latestUpdateSection\")\n    .toPromise()\n    .catch(err=>console.log(err))\n  }\n  getAwarenessData():Promise<any>{\n    return this.http.get(\"/awarenessData\")\n    .toPromise()\n    .catch(err=>console.log(err))\n  }\n\n// getChartData(): Promise<any> {\n//     return this.http.get(\"/chartData\")\n        \n//         .toPromise()\n//         .catch(err=>console.log(err));\n// }\n// getTableData(): Promise<any> {\n//   return this.http.get(\"/tableData\")\n      \n//       .toPromise()\n//       .catch(err=>console.log(err));\n// }\n// getTotalConfirmedCases(): Promise<any> {\n//   return this.http.get(\"/otherDetails\")\n      \n//       .toPromise()\n//       .catch(err=>console.log(err));\n// }\n\n\n// gettotalConfirmedCasesIndians(): Promise<any> {\n//     return this.http.get(\"/totalConfirmedCasesIndians\")\n        \n//         .toPromise()\n//         .catch(err=>console.log(err));\n// }\n// gettotalConfirmedCasesForeigns(): Promise<any> {\n//     return this.http.get(\"/totalConfirmedCasesForeigns\")\n        \n//         .toPromise()\n//         .catch(err=>console.log(err));\n// }\n// getCureds(): Promise<any> {\n//     return this.http.get(\"/cureds\")\n        \n//         .toPromise()\n//         .catch(err=>console.log(err));\n// }\n\n// getDeaths(): Promise<any> {\n//     return this.http.get(\"/deaths\")\n        \n//         .toPromise()\n//         .catch(err=>console.log(err));\n// }\n\n  // getStateNames():Observable<any>{\n  //   return this.http.get<any>(\"/stateNames\")\n  //   .pipe(\n  //     tap(data=>console.log(data))\n  //   );\n  // }\n}\n"]}